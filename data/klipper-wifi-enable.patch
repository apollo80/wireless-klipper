diff --git a/src/stm32/serial.c b/src/stm32/serial.c
index 19aa048e..f949c716 100644
--- a/src/stm32/serial.c
+++ b/src/stm32/serial.c
@@ -7,6 +7,7 @@
 #include "autoconf.h" // CONFIG_SERIAL_BAUD
 #include "board/armcm_boot.h" // armcm_enable_irq
 #include "board/serial_irq.h" // serial_rx_byte
+#include "generic/gpio.h"
 #include "command.h" // DECL_CONSTANT_STR
 #include "internal.h" // enable_pclock
 #include "sched.h" // DECL_INIT
@@ -81,6 +82,40 @@ serial_enable_tx_irq(void)
 void
 serial_init(void)
 {
+#undef ENABLE_WIFI
+//#define ENABLE_WIFI
+#if defined(ENABLE_WIFI)
+    // Marlin 2.1.1 :
+    // SET_OUTPUT(MKS_WIFI_IO0);
+    // WRITE(MKS_WIFI_IO0, HIGH);
+    struct gpio_out MKS_WIFI_IO0 = gpio_out_setup(GPIO('A',8), 0);
+    gpio_out_write(MKS_WIFI_IO0, 1);
+
+    // Marlin
+    // SET_OUTPUT(MKS_WIFI_IO4);
+    // WRITE(MKS_WIFI_IO4, HIGH);
+    struct gpio_out MKS_WIFI_IO4 = gpio_out_setup(GPIO('C', 7), 0);
+    gpio_out_write(MKS_WIFI_IO4, 1);
+
+    // Marlin
+    // SET_OUTPUT(MKS_WIFI_IO_RST);
+    // WRITE(MKS_WIFI_IO_RST, LOW);
+    struct gpio_out MKS_WIFI_IO_RST = gpio_out_setup(GPIO('A', 5), 0);
+    gpio_out_write(MKS_WIFI_IO_RST, 0);
+
+    // Marlin
+    // safe_delay(200);
+    // WRITE(MKS_WIFI_IO_RST, HIGH);
+    udelay(200 * 1000);
+    gpio_out_write(MKS_WIFI_IO_RST, 1);
+
+    // Marlin
+    // safe_delay(200);
+    // WRITE(MKS_WIFI_IO4, LOW);
+    udelay(200 * 1000);
+    gpio_out_write(MKS_WIFI_IO4, 0);
+#endif
+
     enable_pclock((uint32_t)USARTx);
 
     uint32_t pclk = get_pclock_frequency((uint32_t)USARTx);
